parameters:
  app.path.dev_pdf: '%kernel.project_dir%/public/uploads/dev-files'
  app.sender_email: '%env(MAILER_SENDER_EMAIL)%'
  app.sender_name: '%env(MAILER_SENDER_NAME)%'

services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  App\EventListener\UserPasswordEncoderEntityListener:
    tags:
      - { name: doctrine.orm.entity_listener, event: prePersist, entity: 'App\Entity\User' }
      - { name: doctrine.orm.entity_listener, event: preUpdate, entity: 'App\Entity\User' }

  App\EventListener\DevelopmentListener:
    arguments: [ '@security.token_storage' ]
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }
      - { name: doctrine.event_listener, event: postPersist }

  App\Service\ManageUploadFile:
    arguments:
      $targetPdfDirectory: '%app.path.dev_pdf%'

  App\Service\SendEmail:
    arguments:
      $senderEmail: '%app.sender_email%'
      $senderName: '%app.sender_name%'

  App\OpenApi\OpenApiFactory:
    decorates: 'api_platform.openapi.factory'
    arguments: [ '@App\OpenApi\OpenApiFactory.inner' ]
    autoconfigure: false
